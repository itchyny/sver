on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # setup and calc version
    - name: install sver
      run: |
        wget https://github.com/mitoma/sver/releases/download/v0.1.0/sver_linux_amd64.zip
        unzip sver_linux_amd64.zip
        mv sver_linux_amd64/sver /usr/local/bin
        rm -rf sver_linux_amd64.zip sver_linux_amd64
        sver --help
    - id: calc_version
      name: calc current version
      run: |
        version="$(sver calc .)"
        echo "##[set-output name=version;]${version}"

    # setup cache
    - name: Create ci-result dir
      run: mkdir ci-result
    - name: Cache ci result
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-ci-result-${{ steps.calc_version.outputs.version }}
        path: ci-result
    - name: Cache cargo dependency
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target

    # ci phase
    - name: Build
      if: ${{ hashFiles('ci-result/build-${{ steps.calc_version.outputs.version }}.success') == '' }}
      run: cargo build --verbose && touch ci-result/build-${{ steps.calc_version.outputs.version }}.success
    - name: Lint
      run: cargo clippy --verbose && touch ci-result/lint-${{ steps.calc_version.outputs.version }}.success
    - name: Run tests
      run: cargo test --verbose && touch ci-result/test-${{ steps.calc_version.outputs.version }}.success

    # omake
    - name: Print version
      run: echo "version=${{ steps.calc_version.outputs.version }}"