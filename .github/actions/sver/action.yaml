name: "execute with sver"
description: |
  すでに同じバージョンに対してジョブが未成功のときのみ実行する command を実行する。

inputs:
  phase:
    description: 'phase name'
    required: true
  command:
    description: 'execute command'
    required: true
  path:
    description: 'sver target path'
    required: false
    default: '.'

  cache_key:
    description: 'cache key'
    required: false
    default: ''
  cache_path:
    description: 'cache path'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - name: Create ci-result dir
      shell: bash
      run: mkdir -p ci-result
    - id: calc_version
      name: calc current version
      shell: bash
      run: |
        version="$(sver calc ${{ inputs.path }})"
        echo "##[set-output name=version;]${version}"
    - name: Cache ci result
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-ci-result-${{ steps.calc_version.outputs.version }}
        path: ci-result/${{ inputs.phase }}-${{ steps.calc_version.outputs.version }}.success
    - name: Check ci-result
      id: ci_result
      shell: bash
      run: |
        echo "##[set-output name=status;]$(test -f ci-result/${{ inputs.phase }}-${{ steps.calc_version.outputs.version }}.success ; echo $?)"

    - name: restore cache
      if: ${{ steps.ci_result.outputs.status != 0 && inputs.cache_key != '' && inputs.cache_path != '' }}
      uses: actions/cache@v3
      with:
        key: "${{ inputs.cache_key }}"
        path: "${{ inputs.cache_path }}"

    - name: execute
      if: ${{ steps.ci_result.outputs.status != 0 }}
      shell: bash
      run: "${{ inputs.command }}"

    - name: save result
      if: ${{ steps.ci_result.outputs.status != 0 }}
      shell: bash
      run: touch ci-result/${{ inputs.phase }}-${{ steps.calc_version.outputs.version }}.success
    - name: echo skip log
      if: ${{ steps.ci_result.outputs.status == 0 }}
      shell: bash
      run: echo "job is already succeeded. skip this job."
